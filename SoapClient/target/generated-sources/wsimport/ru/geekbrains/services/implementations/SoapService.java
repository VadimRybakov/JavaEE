
package ru.geekbrains.services.implementations;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SoapService", targetNamespace = "http://implementations.services.geekbrains.ru/", wsdlLocation = "http://localhost:8080/JspWebApp/SoapService?WSDL")
public class SoapService
    extends Service
{

    private final static URL SOAPSERVICE_WSDL_LOCATION;
    private final static WebServiceException SOAPSERVICE_EXCEPTION;
    private final static QName SOAPSERVICE_QNAME = new QName("http://implementations.services.geekbrains.ru/", "SoapService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/JspWebApp/SoapService?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SOAPSERVICE_WSDL_LOCATION = url;
        SOAPSERVICE_EXCEPTION = e;
    }

    public SoapService() {
        super(__getWsdlLocation(), SOAPSERVICE_QNAME);
    }

    public SoapService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SOAPSERVICE_QNAME, features);
    }

    public SoapService(URL wsdlLocation) {
        super(wsdlLocation, SOAPSERVICE_QNAME);
    }

    public SoapService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SOAPSERVICE_QNAME, features);
    }

    public SoapService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SoapService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SoapIntService
     */
    @WebEndpoint(name = "SoapServicePort")
    public SoapIntService getSoapServicePort() {
        return super.getPort(new QName("http://implementations.services.geekbrains.ru/", "SoapServicePort"), SoapIntService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SoapIntService
     */
    @WebEndpoint(name = "SoapServicePort")
    public SoapIntService getSoapServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://implementations.services.geekbrains.ru/", "SoapServicePort"), SoapIntService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SOAPSERVICE_EXCEPTION!= null) {
            throw SOAPSERVICE_EXCEPTION;
        }
        return SOAPSERVICE_WSDL_LOCATION;
    }

}
